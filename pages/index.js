import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { initializeApp } from "firebase/app";
import { firebaseConfig } from "../config/firebase";
import { getFirestore, onSnapshot } from "firebase/firestore";
import { collection, addDoc, getDocs } from "firebase/firestore";
import { useEffect, useState } from "react";

// Initialize Firebase
const app = initializeApp(firebaseConfig);

const db = getFirestore(app);

const loader = ({ src }) => {
  return `${src}`;
};

export default function Home() {
  const [input, setInput] = useState("");
  const [messages, setMessages] = useState([]);
  const [user, setUser] = useState({});

  const unsub = onSnapshot(collection(db, "messages"), (col) => {
    if (Notification.permission != "granted") return;
    const text = `Oiii seu amor postou uma nova mensagem`;
    const notification = new Notification("Nova mensagem", {
      body: text,
    });
    fetchData();
  });

  const fetchData = async () => {
    const lista = [];
    const querySnapshot = await getDocs(collection(db, "messages"));
    querySnapshot.forEach((doc) => {
      lista.push({ ...doc.data(), id: doc.id });
    });
    lista.sort(function (x, y) {
      return y.createdAt - x.createdAt;
    });
    setMessages(lista);
  };

  useEffect(() => {
    fetchData();
    Notification.requestPermission();
  }, []);

  const addMessage = async () => {
    if (!input) return;
    try {
      const docRef = await addDoc(collection(db, "messages"), {
        name: user.name,
        arroba: user.arroba,
        message: input,
        createdAt: Date.now(),
      });
    } catch (error) {
      console.error(error);
    }
  };
  return (
    <div>
      <Head>
        <title>MyLove</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className="w-full p-6 border-b">
        <h1 className="font-plus text-gray-900 text-2xl">
          Connect <span className="text-red-500">Love</span>
        </h1>
      </header>
      {user.name ? (
        <main className="flex justify-center w-full p-4">
          <div className="w-96 flex flex-col">
            <textarea
              className="w-full px-4 py-3 border-2 transition rounded-md bg-gray-100 border-gray-100 outline-none focus:border-red-500 focus:bg-white"
              onChange={(e) => setInput(e.target.value)}
              placeholder="Envie uma mensagem de amor"
            />
            <button
              onClick={() => addMessage()}
              className="px-4 mt-2 bg-red-500 p-2 font-bold text-white font-plus rounded-md ml-auto transition hover:bg-red-600 active:scale-95"
            >
              Enviar
            </button>
            <div className="flex flex-col border-b mt-4">
              {messages.map((msg) => {
                return (
                  <div
                    key={msg.id}
                    className="p-4 flex flex-col w-full border gap-2 border-b-0"
                  >
                    <div className="flex gap-2 items-center">
                      {msg.name == "João" ? (
                        <Image
                          width={42}
                          className="rounded-full"
                          height={42}
                          loader={loader}
                          alt={"Avatar"}
                          src={
                            "https://cdn.discordapp.com/attachments/826962247968096316/1049126964809707530/7a76e2af4dd9e5a5081315d5102d5304.png"
                          }
                        ></Image>
                      ) : (
                        <Image
                          className="rounded-full"
                          width={42}
                          loader={loader}
                          alt={"Avatar"}
                          height={42}
                          src={
                            "https://cdn.discordapp.com/attachments/826962247968096316/1049127213976539196/cc8b47e894c99416664247f39c32294a.png"
                          }
                        ></Image>
                      )}
                      <div className="flex flex-col gap-0">
                        <span className="font-bold font-plus text-gray-800">
                          {msg.name}
                        </span>
                        <span className="font-normal text-sm font-plus text-gray-400">
                          {msg.arroba}
                        </span>
                      </div>
                    </div>
                    <span className="text-gray-900 font-plus font-regular">
                      {msg.message}
                    </span>
                  </div>
                );
              })}
            </div>
          </div>
        </main>
      ) : (
        <main className="flex justify-center w-full p-4">
          <div className="flex flex-col gap-4 w-96">
            <button
              onClick={() => setUser({ name: "João", arroba: "@joao_o_sol" })}
              className="border-2 border-gray-300 text-gray-700 w-full font-plus rounded-md font-medium flex justify-between items-center p-4 transition hover:border-red-500"
            >
              João
              <span className="font-plus text-sm text-gray-400">Continuar</span>
            </button>
            <button
              onClick={() =>
                setUser({ name: "Nicole", arroba: "@nicole_a_lua" })
              }
              className="border-2 border-gray-300 text-gray-700 w-full font-plus rounded-md font-medium flex justify-between items-center p-4 transition hover:border-red-500"
            >
              Nicole
              <span className="font-plus text-sm text-gray-400">Continuar</span>
            </button>
          </div>
        </main>
      )}

      <footer></footer>
    </div>
  );
}
